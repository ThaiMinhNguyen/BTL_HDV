
services:
  eureka-server:
    build:
      context: ./services/eureka-server
    container_name: eureka-server
    ports:
      - "${EUREKA_PORT:-8761}:8761"
    environment:
      - SPRING_PROFILES_ACTIVE=${SPRING_PROFILES_ACTIVE:-default}
    networks:
      - app-network
    restart: always
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8761/actuator/health"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 20s

  # API Gateway
  api-gateway:
    build:
      context: ./api-gateway
    container_name: api-gateway
    ports:
      - "${API_GATEWAY_PORT:-8080}:8080"
    environment:
      - EUREKA_SERVER_URL=${EUREKA_SERVER_URL:-http://eureka-server:8761/eureka/}
      - SPRING_PROFILES_ACTIVE=${SPRING_PROFILES_ACTIVE:-docker}
    depends_on:
      eureka-server:
        condition: service_healthy
    networks:
      - app-network
    restart: always

  # Frontend
  frontend:
    build:
      context: ./frontend
    container_name: frontend
    ports:
      - "${FRONTEND_PORT:-80}:80"
    depends_on:
      - api-gateway
    networks:
      - app-network
    restart: always

  # MySQL Database
  mysql:
    image: mysql:8
    container_name: mysql-db
    environment:
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD:-22012003}
      - MYSQL_DATABASE=${MYSQL_DATABASE:-shoe_order_db}
    volumes:
      - mysql-data:/var/lib/mysql
      - ./db-init:/docker-entrypoint-initdb.d
    networks:
      - app-network
    ports:
      - "3307:3306"
    command: --lower_case_table_names=1
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "root", "-p${MYSQL_ROOT_PASSWORD:-22012003}"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 30s

  # Order Service
  order-service:
    build:
      context: ./services/order-service
    container_name: order-service
    ports:
      - "${ORDER_SERVICE_PORT:-8081}:8081"
    environment:
      - EUREKA_SERVER_URL=${EUREKA_SERVER_URL:-http://eureka-server:8761/eureka/}
      - SPRING_PROFILES_ACTIVE=${SPRING_PROFILES_ACTIVE:-docker}
    depends_on:
      eureka-server:
        condition: service_healthy
      mysql:
        condition: service_healthy
    networks:
      - app-network
    restart: always

  # User Service
  user-service:
    build:
      context: ./services/user-service
    container_name: user-service
    ports:
      - "${USER_SERVICE_PORT:-8083}:8083"
    environment:
      - EUREKA_SERVER_URL=${EUREKA_SERVER_URL:-http://eureka-server:8761/eureka/}
      - SPRING_PROFILES_ACTIVE=${SPRING_PROFILES_ACTIVE:-docker}
    depends_on:
      eureka-server:
        condition: service_healthy
      mysql:
        condition: service_healthy
    networks:
      - app-network
    restart: always

  # Shoe Service
  shoe-service:
    build:
      context: ./services/shoe-service
    container_name: shoe-service
    ports:
      - "${SHOE_SERVICE_PORT:-8082}:8082"
    environment:
      - EUREKA_SERVER_URL=${EUREKA_SERVER_URL:-http://eureka-server:8761/eureka/}
      - SPRING_PROFILES_ACTIVE=${SPRING_PROFILES_ACTIVE:-docker}
    depends_on:
      eureka-server:
        condition: service_healthy
      mysql:
        condition: service_healthy
    networks:
      - app-network
    restart: always

  # Cart Service
  cart-service:
    build:
      context: ./services/cart-service
    container_name: cart-service
    ports:
      - "${CART_SERVICE_PORT:-8084}:8084"
    environment:
      - EUREKA_SERVER_URL=${EUREKA_SERVER_URL:-http://eureka-server:8761/eureka/}
      - SPRING_PROFILES_ACTIVE=${SPRING_PROFILES_ACTIVE:-docker}
    depends_on:
      eureka-server:
        condition: service_healthy
      mysql:
        condition: service_healthy
    networks:
      - app-network
    restart: always

  # Notification Service
  notification-service:
    build:
      context: ./services/notification-service
    container_name: notification-service
    ports:
      - "${NOTIFICATION_SERVICE_PORT:-8085}:8085"
    environment:
      - EUREKA_SERVER_URL=${EUREKA_SERVER_URL:-http://eureka-server:8761/eureka/}
      - SPRING_PROFILES_ACTIVE=${SPRING_PROFILES_ACTIVE:-docker}
      - RESEND_API_KEY=${RESEND_API_KEY:-re_32EPjyYY_44EYDNhipMTh2s86Zyb1vci1}
      - RESEND_FROM_EMAIL=${RESEND_FROM_EMAIL:-onboarding@resend.dev}
    depends_on:
      eureka-server:
        condition: service_healthy
    networks:
      - app-network
    restart: always

networks:
  app-network:
    driver: bridge

volumes:
  mysql-data:
    driver: local